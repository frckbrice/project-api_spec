openapi: 3.1.0
info:
  version: 1.0.0
  title: CocoaFlow API
  summary: "Comprehensive Cocoa Industry Management Platform"
  description: |
    # 🌱 CocoaFlow API
    
    **The Complete Solution for Cocoa Industry Digital Transformation**
    
    ---
    
    ## 🎯 Overview
    
    CocoaFlow is a comprehensive API platform designed to revolutionize cocoa industry operations through digital transformation. Our API provides end-to-end solutions for farmer management, farm tracking, certification compliance, and supply chain optimization.
    
    ### 🌟 Why CocoaFlow?
    
    - **🌍 Industry-Focused**: Built specifically for cocoa industry challenges
    - **🔒 Enterprise-Grade**: Production-ready with enterprise security
    - **📊 Data-Driven**: Comprehensive analytics and reporting
    - **🌱 Sustainable**: Supports Rainforest Alliance certification
    - **🚀 Scalable**: Designed for growth and expansion
    
    ---
    
    ## 🚀 Key Features
    
    ### 👨‍🌾 **Farmer Management**
    Complete farmer profiles, contracts, and relationship tracking with digital onboarding and verification.
    
    ### 🏡 **Farm Operations**
    GPS coordinates, inspection data, and compliance monitoring with real-time tracking capabilities.
    
    ### 🌿 **Certification Support**
    Rainforest Alliance compliance tracking and audit trails with automated compliance checks.
    
    ### 📈 **Campaign Management**
    Seasonal campaign management and data collection periods with performance analytics.
    
    ### 🔄 **Supply Chain**
    Market management, transactions, and inventory tracking with end-to-end traceability.
    
    ### 🎓 **Training & Education**
    Session management and participant tracking with learning analytics and certification.
    
    ---
    
    ## 🛠️ Getting Started
    
    ### 1. **Authentication**
    ```bash
    # JWT Bearer Token Authentication
    curl -H "Authorization: Bearer YOUR_JWT_TOKEN" \
         https://api.cocoaflow.com/v1/farms
    ```
    
    ### 2. **API Requirements**
    - **Content-Type**: `application/json`
    - **Rate Limiting**: 1000 requests per hour per API key
    - **Authentication**: JWT Bearer token required
    
    ### 3. **Quick Start**
    ```bash
    # Install SDK
    npm install @cocoaflow/js-sdk
    
    # Initialize client
    const client = new CocoaFlowAPI({
      apiKey: 'your-api-key',
      baseURL: 'https://api.cocoaflow.com'
    });
    ```
    
    ---
    
    ## 🌐 Environment
    
    | Environment | URL | Status |
    |-------------|-----|--------|
    | **Production** | [https://api.cocoaflow.com](https://api.cocoaflow.com) | 🚧 Coming Soon |
    | **Documentation** | [https://project-apispec.vercel.app](https://project-apispec.vercel.app) | ✅ Live |
    | **Local Development** | `http://localhost:8080` | ✅ Available |
    
    ---
    
    ## 📚 SDKs & Libraries
    
    | SDK | Language | Status | Documentation |
    |-----|----------|--------|---------------|
    | **JavaScript/TypeScript** | Node.js, Browser | 🚧 Design Phase | [View Design](https://github.com/frckbrice/project-api_spec/tree/main/sdks/javascript) |
    | **Python** | Python 3.8+ | 🚧 Design Phase | [View Design](https://github.com/frckbrice/project-api_spec/tree/main/sdks/python) |
    | **Postman Collection** | API Testing | ✅ Ready | [Download](https://github.com/frckbrice/project-api_spec/tree/main/postman) |
    
    ---
    
    ## 🆘 Support & Resources
    
    - **📖 Documentation**: [https://project-apispec.vercel.app](https://project-apispec.vercel.app)
    - **📧 Support Email**: support@cocoaflow.com
    - **🐛 Issues**: [GitHub Issues](https://github.com/frckbrice/project-api_spec/issues)
    - **📚 API Reference**: [OpenAPI Spec](./cocoaflow-api.yaml)
    
    ---
    
    ## 🏗️ Architecture
    
    ### **Security**
    - JWT Bearer Token Authentication
    - OAuth 2.0 Support (Coming Soon)
    - Rate Limiting & Throttling
    - CORS Configuration
    
    ### **Performance**
    - RESTful API Design
    - Pagination Support
    - Caching Headers
    - Compression
    
    ### **Reliability**
    - Standardized Error Responses
    - Comprehensive Logging
    - Health Check Endpoints
    - Monitoring & Analytics
    
    ---
    
    *Built with ❤️ for the Cocoa Industry*
    
  termsOfService: "https://cocoaflow.com/terms"
  contact:
    email: support@cocoaflow.com
    url: "https://cocoaflow.com/contact"
    name: "CocoaFlow Support Team"
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  x-logo:
    url: "https://cocoaflow.com/assets/logo.png"
    altText: "CocoaFlow Logo"
    backgroundColor: "#2E7D32"
    href: "https://cocoaflow.com"


externalDocs:
  description: "📚 GitHub Repository & Documentation"
  url: "https://github.com/frckbrice/project-api_spec"

tags:
  - name: 🔐 Authentication
    description: |
      **User authentication and authorization endpoints**
      
      Secure JWT Bearer token authentication with OAuth 2.0 support for third-party integrations.
      
      **Features:**
      - JWT Token Management
      - OAuth 2.0 Authorization
      - Role-based Access Control
      - Session Management
  - name: 🏢 Companies
    description: |
      **Company management operations for cocoa industry organizations**
      
      Complete company profile management with multi-tenant support and organizational hierarchy.
      
      **Features:**
      - Company Registration & Onboarding
      - Multi-tenant Architecture
      - Organizational Hierarchy
      - Compliance Management
  - name: 👥 Users
    description: |
      **User management for system administrators and company employees**
      
      Comprehensive user management with role-based permissions and activity tracking.
      
      **Features:**
      - User Registration & Profiles
      - Role-based Permissions
      - Activity Tracking
      - Password Management
  - name: 👨‍🌾 Farmers
    description: |
      **Farmer profile and relationship management**
      
      Digital farmer onboarding with comprehensive profile management and relationship tracking.
      
      **Features:**
      - Digital Onboarding
      - Profile Management
      - Contract Management
      - Performance Tracking
  - name: 🏡 Farms
    description: |
      **Farm registration, GPS tracking, and compliance monitoring**
      
      GPS-enabled farm management with real-time tracking and compliance monitoring.
      
      **Features:**
      - GPS Coordinates
      - Real-time Tracking
      - Compliance Monitoring
      - Inspection Data
  - name: 🌿 Projects
    description: |
      **Rainforest Alliance certification projects and compliance tracking**
      
      Automated compliance tracking with audit trails and certification management.
      
      **Features:**
      - Certification Tracking
      - Audit Trails
      - Compliance Automation
      - Reporting Tools
  - name: 📈 Campaigns
    description: |
      **Seasonal campaign management and data collection periods**
      
      Seasonal campaign management with performance analytics and data collection.
      
      **Features:**
      - Campaign Planning
      - Data Collection
      - Performance Analytics
      - Seasonal Management
  - name: 🏪 Markets
    description: |
      **Market sessions for cocoa trading between companies and farmers**
      
      Digital marketplace for cocoa trading with transaction management and pricing.
      
      **Features:**
      - Digital Marketplace
      - Transaction Management
      - Pricing Models
      - Market Analytics
  - name: 💰 Transactions
    description: |
      **Financial transactions and payment processing**
      
      Secure payment processing with transaction history and financial reporting.
      
      **Features:**
      - Payment Processing
      - Transaction History
      - Financial Reporting
      - Audit Trails
  - name: 🎓 Training
    description: |
      **Farmer training sessions and educational content management**
      
      Comprehensive training management with learning analytics and certification tracking.
      
      **Features:**
      - Session Management
      - Learning Analytics
      - Certification Tracking
      - Content Management
  - name: 🔍 Inspection
    description: |
      **Farm inspection data collection and compliance verification**
      
      Digital inspection tools with automated compliance verification and reporting.
      
      **Features:**
      - Digital Inspections
      - Compliance Verification
      - Automated Reporting
      - Data Collection
  - name: 📊 Analytics
    description: |
      **Data analytics and reporting endpoints**
      
      Comprehensive business intelligence with real-time analytics and custom reporting.
      
      **Features:**
      - Business Intelligence
      - Real-time Analytics
      - Custom Reporting
      - Data Visualization
  - name: ⚙️ Administration
    description: |
      **System administration and configuration**
      
      System-wide administration tools with configuration management and monitoring.
      
      **Features:**
      - System Configuration
      - User Management
      - Monitoring & Alerts
      - Backup & Recovery
  - name: 🌿 Audits
    description: |
      **Audit and compliance verification endpoints**
      
      Comprehensive audit management with compliance verification and reporting.
      
      **Features:**
      - Project Audits
      - Market Audits
      - Compliance Verification
      - Audit Reporting

x-tagGroups:
  - name: 🏢 Core Operations
    tags:
      - 🏢 Companies
      - 👥 Users
      - 👨‍🌾 Farmers
      - 🏡 Farms
      - 🌿 Projects
      - 📈 Campaigns
      - 🔍 Inspection
      - 📊 Analytics
      - 🔐 Authentication
      - 🏪 Markets
      - 💰 Transactions
      - 🎓 Training
  - name: 🌿 Certification & Compliance
    tags:
      - 🌿 Audits
      - 📈 Campaigns
      - 🔍 Inspection
  - name: 💼 Business Operations
    tags:
      - 🏪 Markets
      - 💰 Transactions
      - 🎓 Training
  - name: ⚙️ System Management
    tags:
      - 🔐 Authentication
      - 📊 Analytics
      - ⚙️ Administration

servers:
  - url: https://api.cocoaflow.com
    description: 🌐 Production Environment
  - url: https://staging-api.cocoaflow.com
    description: 🧪 Staging Environment
  - url: https://project-apispec.vercel.app
    description: 📚 Documentation & API Specification
  - url: http://localhost:8080
    description: 💻 Local Development Environment

paths:
  "/auth/login": # authentication
    $ref: paths/auth/auth.yaml
  "/auth/refresh":
    $ref: paths/auth/refresh.yaml
  "/auth/logout":
    $ref: paths/auth/logout.yaml
  "/auth/me":
    get:
      $ref: paths/auth/auth.yaml#/get
  "/users": # user
    $ref: paths/user/user.yaml
  "/users/{id}":
    $ref: paths/user/user_{id}.yaml
  "/companies": # company
    $ref: paths/companies/company.yaml
  "/companies/{id}":
    $ref: paths/companies/company_{id}.yaml
  "/campaign": # campaign
    $ref: paths/campaign.yaml
  "/price_plan": # price plan
    $ref: paths/price/price.yaml
  "/price_plan/{id}":
    $ref: paths/price/price_{id}.yaml
  "/projects": # project
    $ref: paths/project/project.yaml
  "/projects/{id}":
    $ref: paths/project/project_{id}.yaml
  "/farms": # farm
    $ref: paths/farm/farm.yaml
  "/farms/{id}":
    $ref: paths/farm/farm_{id}.yaml
  "/audits": # unified audits endpoint
    $ref: paths/audits.yaml
  "/receipts": # receipts
    $ref: paths/receipt/receipt.yaml
  "/receipts/{id}":
    $ref: paths/receipt/receipt_{id}.yaml
  "/farm_coordinates": #farm_coordinate
    $ref: paths/farm_coodinates/farm_coordinate.yaml
  "/farm_coordinate/{farmer_id}":
    $ref: paths/farm_coodinates/farm_coordinate_{farmer_id}.yaml
  "/markets": #market
    $ref: paths/market/market.yaml
  "/markets/{id}":
    $ref: paths/market/market_{id}.yaml
  "/markets/{company_id}/company":
    $ref: paths/market/market_{company_id}.yaml
  "/inspection_data": # inspection_data
    $ref: "paths/inspection_data/inspection_data.yaml"
  "/inspection_data/{project_id}":
    $ref: "paths/inspection_data/inspection_data_{project_id}.yaml"

  "/subscriptions": # subcription
    $ref: "paths/subscription/subscription.yaml"
  "/subscriptions/{id}":
    $ref: "paths/subscription/subscription_{id}.yaml"
  "/subscriptions/{company_id}/company":
    $ref: paths/subscription/subscription_{company_id }_company.yaml
  "/trainings": # training
    $ref: paths/training/training.yaml
  "/trainings/{id}":
    $ref: paths/training/training_{id}.yaml
  "/transaction": # transaction
    $ref: paths/transaction.yaml
  "/campaign_stocks": #campaign_stock
    $ref: paths/campaign_stock/campaign_stock.yaml
  "/campaign_stocks/{campaign_id}":
    $ref: paths/campaign_stock/campaign_stock_{campaign_id}.yaml
  "/requirements": #requirement
    $ref: paths/requirement/requirement.yaml
  "/requirement/{id}":
    $ref: paths/requirement/requirement_{id} .yaml
  "/requirement/price_plan/{plan_id}":
    $ref: paths/requirement/requirement_price_plan_{plan_id}.yaml
  "/collector_agents": # collector_agent
    $ref: "paths/collector_agent/collector_agent.yaml"
  "/collector_agents/{id}":
    $ref: paths/collector_agent/collector_agent_{id}.yaml
  "/training_session": #participants
    $ref: paths/training_session.yaml
  "/price_plan_requirements":
    $ref: paths/price_plan_requirement.yaml
components:
  schemas:
    AuthResponse:
      $ref: components/schemas/auth_response.yaml
    Tokens:
      $ref: components/schemas/tokens.yaml
    Session:
      $ref: components/schemas/session.yaml
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT Bearer token authentication. Include your JWT token in the Authorization header.
        
        **Example:**
        ```
        Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        ```
        
        **Token Format:**
        - Header: `{"alg": "HS256", "typ": "JWT"}`
        - Payload: `{"sub": "user_id", "company_id": "company_id", "role": "user_role", "exp": 1640995200}`
        - Signature: HMAC SHA256
        
        **Token Expiration:** 24 hours
        **Refresh Token:** Available via `/auth/refresh` endpoint
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: |
        API Key for service-to-service authentication.
        Used for webhook endpoints and automated integrations.
        
        **Example:**
        ```
        X-API-Key: sk_live_1234567890abcdef
        ```
    OAuth2Auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://cocoaflow.com/oauth/authorize
          tokenUrl: https://cocoaflow.com/oauth/token
          scopes:
            read:users: Read user information
            write:users: Create and update users
            read:farms: Read farm data
            write:farms: Create and update farms
            read:companies: Read company information
            write:companies: Create and update companies
            admin: Full administrative access
      description: |
        OAuth 2.0 authorization code flow for third-party integrations.
        Recommended for public integrations and mobile applications.

  parameters:
    PaginationLimit:
      name: limit
      in: query
      description: Number of items to return (max 100)
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
        example: 20
    PaginationOffset:
      name: offset
      in: query
      description: Number of items to skip for pagination
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
        example: 0
    CompanyId:
      name: company_id
      in: query
      description: Filter by company ID
      required: false
      schema:
        type: string
        format: cuid
        example: "clh1234567890abcdef"
    DateRangeStart:
      name: start_date
      in: query
      description: Start date for filtering (ISO 8601 format)
      required: false
      schema:
        type: string
        format: date
        example: "2024-01-01"
    DateRangeEnd:
      name: end_date
      in: query
      description: End date for filtering (ISO 8601 format)
      required: false
      schema:
        type: string
        format: date
        example: "2024-12-31"

  responses:
    UnauthorizedError:
      description: Authentication credentials were missing or invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Unauthorized"
              message:
                type: string
                example: "Invalid or missing authentication token"
              code:
                type: string
                example: "AUTH_REQUIRED"
    ForbiddenError:
      description: The request was understood but the server is refusing to authorize it
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Forbidden"
              message:
                type: string
                example: "Insufficient permissions to access this resource"
              code:
                type: string
                example: "INSUFFICIENT_PERMISSIONS"
    ValidationError:
      description: The request was well-formed but contains invalid parameters
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Validation Error"
              message:
                type: string
                example: "Request validation failed"
              details:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                      example: "email"
                    message:
                      type: string
                      example: "Invalid email format"
              code:
                type: string
                example: "VALIDATION_ERROR"
    RateLimitError:
      description: Too many requests, please try again later
      headers:
        X-RateLimit-Limit:
          description: The number of allowed requests in the current period
          schema:
            type: integer
        X-RateLimit-Remaining:
          description: The number of remaining requests in the current period
          schema:
            type: integer
        X-RateLimit-Reset:
          description: The number of seconds left in the current period
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Rate Limit Exceeded"
              message:
                type: string
                example: "Too many requests, please try again later"
              retry_after:
                type: integer
                example: 3600
              code:
                type: string
                example: "RATE_LIMIT_EXCEEDED"
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal Server Error"
              message:
                type: string
                example: "An unexpected error occurred"
              request_id:
                type: string
                example: "req_1234567890abcdef"
              code:
                type: string
                example: "INTERNAL_ERROR"

security:
  - BearerAuth: []
  - ApiKeyAuth: []
webhooks:
  userInfo:
    post:
      summary: New user webhook
      description: "Information about a new subscription entring in the system."
      operationId: susbscriptionInfo
      tags:
        - susbscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: components/schemas/subscription.yaml
      responses:
        "200":
          description: "Successfully retrieved information about a new subscription."
      security:
        - BearerAuth: []
