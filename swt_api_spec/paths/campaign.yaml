#create a campaign from all operations of the company will be performed
post:
  tags:
    - ðŸ“ˆ Campaigns
  summary: Create a new campaign
  description: |
    Create a new campaign from which all the operations like projects will be performed.

    **Required Permissions:** `write:campaigns`

    **Business Rules:**
    - Campaign names must be unique within a company
    - Campaign dates cannot overlap with existing campaigns
    - Only one active campaign per company at a time
  operationId: createCampaign
  security:
    - BearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - name
            - start_date
            - end_date
          properties:
            name:
              type: string
              description: Campaign name (e.g., "2024-2025 Season")
              example: "2024-2025 Season"
            description:
              type: string
              description: Campaign description
              example: "Main cocoa harvesting campaign for 2024-2025 season"
            start_date:
              type: string
              format: date
              description: Campaign start date
              example: "2024-09-01"
            end_date:
              type: string
              format: date
              description: Campaign end date
              example: "2025-03-31"
            company_id:
              type: string
              format: cuid
              description: Company ID for the campaign
              example: "clh1234567890abcdef"
        examples:
          basic_campaign:
            summary: Basic campaign
            description: Create a campaign with minimal information
            value:
              name: "2024-2025 Season"
              start_date: "2024-09-01"
              end_date: "2025-03-31"
          detailed_campaign:
            summary: Detailed campaign
            description: Create a campaign with full details
            value:
              name: "2024-2025 Season"
              description: "Main cocoa harvesting campaign for 2024-2025 season"
              start_date: "2024-09-01"
              end_date: "2025-03-31"
              company_id: "clh1234567890abcdef"
  responses:
    "201":
      description: Campaign created successfully
      headers:
        Location:
          description: URL of the created campaign resource
          schema:
            type: string
            format: uri
      content:
        application/json:
          schema:
            $ref: ../components/schemas/campaign.yaml
          example:
            id: "clh1234567890abcdef"
            name: "Spring 2024 Harvest"
            description: "Main cocoa harvest campaign for Spring 2024"
            start_date: "2024-09-01"
            end_date: "2025-03-31"
            status: "OPEN"
            created_at: "2024-01-15T10:30:00Z"
            updated_at: "2024-01-15T10:30:00Z"
    "400":
      $ref: ../components/responses/ValidationError.yaml
    "401":
      $ref: ../components/responses/UnauthorizedError.yaml
    "403":
      $ref: ../components/responses/ForbiddenError.yaml
    "409":
      description: Campaign already exists
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Campaign Already Exists"
              message:
                type: string
                example: "A campaign with this name already exists"
              code:
                type: string
                example: "CAMPAIGN_ALREADY_EXISTS"
    "500":
      $ref: ../components/responses/ServerError.yaml

#read all campaigns
get:
  tags:
    - ðŸ“ˆ Campaigns
  summary: List all campaigns
  description: |
    Retrieve a paginated list of campaigns with optional filtering capabilities.

    **Required Permissions:** `read:campaigns`

    **Filtering Options:**
    - Filter by company ID
    - Filter by status (active, inactive, completed)
    - Filter by date range
    - Filter by campaign name

    **Pagination:**
    - Default limit: 20 items per page
    - Maximum limit: 100 items per page
  operationId: getAllCampaigns
  security:
    - BearerAuth: []
  parameters:
    - $ref: ../components/parameters/PaginationLimit.yaml
    - $ref: ../components/parameters/PaginationOffset.yaml
    - $ref: ../components/parameters/CompanyId.yaml
    - $ref: ../components/parameters/DateRangeStart.yaml
    - $ref: ../components/parameters/DateRangeEnd.yaml
    - name: status
      in: query
      description: Filter by campaign status
      required: false
      schema:
        type: string
        enum: [active, inactive, completed]
        example: "active"
    - name: name
      in: query
      description: Filter by campaign name (partial match)
      required: false
      schema:
        type: string
        example: "2024-2025"
  responses:
    "200":
      description: Campaign list retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: ../components/schemas/campaign.yaml
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    example: 20
                  offset:
                    type: integer
                    example: 0
                  total:
                    type: integer
                    example: 5
                  page_count:
                    type: integer
                    example: 1
                  has_next:
                    type: boolean
                    example: false
                  has_prev:
                    type: boolean
                    example: false
          example:
            data:
              - id: "clh1234567890abcdef"
                name: "Spring 2024 Harvest"
                description: "Main cocoa harvest campaign for Spring 2024"
                start_date: "2024-09-01"
                end_date: "2025-03-31"
                status: "OPEN"
                created_at: "2024-01-15T10:30:00Z"
                updated_at: "2024-01-15T10:30:00Z"
              - id: "clh1234567890abcdeg"
                name: "Fall 2023 Harvest"
                description: "Main cocoa harvest campaign for Fall 2023"
                start_date: "2023-09-01"
                end_date: "2024-03-31"
                status: "CLOSED"
                created_at: "2023-08-15T10:30:00Z"
                updated_at: "2024-03-31T23:59:59Z"
            pagination:
              limit: 20
              offset: 0
              total: 2
              page_count: 1
              has_next: false
              has_prev: false
    "400":
      $ref: ../components/responses/ValidationError.yaml
    "401":
      $ref: ../components/responses/UnauthorizedError.yaml
    "403":
      $ref: ../components/responses/ForbiddenError.yaml
    "500":
      $ref: ../components/responses/ServerError.yaml

#update a campaign
put:
  tags:
    - ðŸ“ˆ Campaigns
  summary: Update a campaign
  description: |
    Update an existing campaign's information.

    **Required Permissions:** `write:campaigns`

    **Business Rules:**
    - Cannot update campaign dates if projects are already associated
    - Cannot change status to inactive if campaign has active projects
    - Only campaign owner or admin can update campaign
  operationId: updateCampaign
  security:
    - BearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            name:
              type: string
              description: Campaign name
              example: "2024-2025 Season Updated"
            description:
              type: string
              description: Campaign description
              example: "Updated campaign description"
            start_date:
              type: string
              format: date
              description: Campaign start date
              example: "2024-09-01"
            end_date:
              type: string
              format: date
              description: Campaign end date
              example: "2025-03-31"
            status:
              type: string
              enum: [active, inactive, completed]
              description: Campaign status
              example: "active"
        examples:
          update_campaign:
            summary: Update campaign
            description: Update campaign with new information
            value:
              name: "2024-2025 Season Updated"
              description: "Updated campaign description"
              status: "active"
  responses:
    "200":
      description: Campaign updated successfully
      content:
        application/json:
          schema:
            $ref: ../components/schemas/campaign.yaml
          example:
            id: "clh1234567890abcdef"
            name: "Spring 2024 Harvest"
            description: "Main cocoa harvest campaign for Spring 2024"
            start_date: "2024-09-01"
            end_date: "2025-03-31"
            status: "OPEN"
            created_at: "2024-01-15T10:30:00Z"
            updated_at: "2024-01-15T11:30:00Z"
    "400":
      $ref: ../components/responses/ValidationError.yaml
    "401":
      $ref: ../components/responses/UnauthorizedError.yaml
    "403":
      $ref: ../components/responses/ForbiddenError.yaml
    "404":
      description: Campaign not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Campaign Not Found"
              message:
                type: string
                example: "Campaign with the specified ID was not found"
              code:
                type: string
                example: "CAMPAIGN_NOT_FOUND"
    "409":
      description: Campaign update conflict
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Campaign Update Conflict"
              message:
                type: string
                example: "Cannot update campaign due to existing projects"
              code:
                type: string
                example: "CAMPAIGN_UPDATE_CONFLICT"
    "500":
      $ref: ../components/responses/ServerError.yaml

#delete a campaign
delete:
  tags:
    - ðŸ“ˆ Campaigns
  summary: Delete a campaign
  description: |
    Delete a campaign from the system.

    **Required Permissions:** `write:campaigns`

    **Business Rules:**
    - Cannot delete campaigns with associated projects
    - Cannot delete active campaigns
    - Only campaign owner or admin can delete campaign
    - Soft delete - marks campaign as deleted but preserves data
  operationId: deleteCampaign
  security:
    - BearerAuth: []
  responses:
    "204":
      description: Campaign deleted successfully
    "400":
      description: Cannot delete campaign
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Cannot Delete Campaign"
              message:
                type: string
                example: "Campaign has associated projects and cannot be deleted"
              code:
                type: string
                example: "CAMPAIGN_HAS_PROJECTS"
    "401":
      $ref: ../components/responses/UnauthorizedError.yaml
    "403":
      $ref: ../components/responses/ForbiddenError.yaml
    "404":
      description: Campaign not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Campaign Not Found"
              message:
                type: string
                example: "Campaign with the specified ID was not found"
              code:
                type: string
                example: "CAMPAIGN_NOT_FOUND"
    "500":
      $ref: ../components/responses/ServerError.yaml
