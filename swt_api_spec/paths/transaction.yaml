# create a transaction
post:
  tags:
    - ðŸ’° Transactions
  summary: Create a transaction
  description: Create a new transaction record
  operationId: createTransaction
  security:
    - BearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../../components/schemas/transaction.yaml"
        examples:
          basic_transaction:
            summary: Basic transaction
            description: Create a transaction with minimal information
            value:
              market_id: "clh1234567890abcdef"
              date: "2024-01-15T10:30:00Z"
              quantity: 500
              net_weight_declared_in_Ton: 0.5
              humidity_level_of_product: 7.5
              total_quantity_in_bags: 10
              product_quality: "Grade A"
          detailed_transaction:
            summary: Detailed transaction
            description: Create a transaction with all available information
            value:
              market_id: "clh1234567890abcdef"
              date: "2024-01-15T10:30:00Z"
              level_of_traceability: "identite preservee"
              driver_name: "John Smith"
              quantity: 500
              net_weight_declared_in_Ton: 0.5
              humidity_level_of_product: 7.5
              total_quantity_in_bags: 10
              receiver_name: "Jane Doe"
              min_com_verif_agent_name_and_sig: "Agent Smith - Verified"
              sender_signature: "Sender123"
              driver_signature: "Driver456"
              product_quality: "Grade A"
              vehicule_immatriculation_number: "ABC123XY"
  responses:
    "201":
      description: Transaction created successfully
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/transaction.yaml"
          example:
            id: "clh1234567890abcdef"
            market_id: "clh1234567890abcdef"
            date: "2024-01-15T10:30:00Z"
            level_of_traceability: "identite preservee"
            driver_name: "John Smith"
            quantity: 500
            net_weight_declared_in_Ton: 0.5
            humidity_level_of_product: 7.5
            total_quantity_in_bags: 10
            receiver_name: "Jane Doe"
            min_com_verif_agent_name_and_sig: "Agent Smith - Verified"
            sender_signature: "Sender123"
            driver_signature: "Driver456"
            product_quality: "Grade A"
            vehicule_immatriculation_number: "ABC123XY"
            created_at: "2024-01-15T10:30:00Z"
            updated_at: "2024-01-15T10:30:00Z"
    "400":
      $ref: "../../components/responses/ValidationError.yaml"
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "409":
      description: Transaction already exists
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Transaction Already Exists"
              message:
                type: string
                example: "A transaction with these details already exists"
              code:
                type: string
                example: "TRANSACTION_ALREADY_EXISTS"
    "500":
      $ref: "../../components/responses/ServerError.yaml"

# get all transaction
get:
  tags:
    - ðŸ’° Transactions
  summary: Get all transactions
  description: Retrieve all transactions with optional filtering
  operationId: listTransactions
  security:
    - BearerAuth: []
  parameters:
    - $ref: "../../components/parameters/PaginationLimit.yaml"
    - $ref: "../../components/parameters/PaginationOffset.yaml"
    - $ref: "../../components/parameters/CompanyId.yaml"
    - $ref: "../../components/parameters/DateRangeStart.yaml"
    - $ref: "../../components/parameters/DateRangeEnd.yaml"
  responses:
    "200":
      description: List of transactions retrieved successfully
      headers:
        X-Total-Count:
          description: Total number of transactions matching the filter criteria
          schema:
            type: integer
        X-Page-Count:
          description: Total number of pages
          schema:
            type: integer
        Link:
          description: Pagination links (first, prev, next, last)
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "../../components/schemas/transaction.yaml"
              pagination:
                type: object
                properties:
                  total:
                    type: integer
                    example: 150
                  limit:
                    type: integer
                    example: 20
                  offset:
                    type: integer
                    example: 0
                  has_more:
                    type: boolean
                    example: true
          example:
            data:
              - id: "clh1234567890abcdef"
                market_id: "clh1234567890abcdef"
                date: "2024-01-15T10:30:00Z"
                level_of_traceability: "identite preservee"
                driver_name: "John Smith"
                quantity: 500
                net_weight_declared_in_Ton: 0.5
                humidity_level_of_product: 7.5
                total_quantity_in_bags: 10
                receiver_name: "Jane Doe"
                min_com_verif_agent_name_and_sig: "Agent Smith - Verified"
                sender_signature: "Sender123"
                driver_signature: "Driver456"
                product_quality: "Grade A"
                vehicule_immatriculation_number: "ABC123XY"
                created_at: "2024-01-15T10:30:00Z"
                updated_at: "2024-01-15T10:30:00Z"
              - id: "clh1234567890abcdeg"
                market_id: "clh1234567890abcdef"
                date: "2024-01-15T09:15:00Z"
                level_of_traceability: "identite preservee"
                driver_name: "Bob Johnson"
                quantity: 750
                net_weight_declared_in_Ton: 0.75
                humidity_level_of_product: 8.0
                total_quantity_in_bags: 15
                receiver_name: "Alice Brown"
                min_com_verif_agent_name_and_sig: "Agent Jones - Verified"
                sender_signature: "Sender789"
                driver_signature: "Driver012"
                product_quality: "Grade B"
                vehicule_immatriculation_number: "XYZ789AB"
                created_at: "2024-01-15T09:15:00Z"
                updated_at: "2024-01-15T09:15:00Z"
            pagination:
              total: 150
              limit: 20
              offset: 0
              has_more: true
    "400":
      $ref: "../../components/responses/ValidationError.yaml"
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "429":
      $ref: "../../components/responses/RateLimitError.yaml"
    "500":
      $ref: "../../components/responses/ServerError.yaml"

# update a transaction
put:
  tags:
    - ðŸ’° Transactions
  summary: Update a transaction
  description: Update an existing transaction record
  operationId: updateTransaction
  security:
    - BearerAuth: []
  parameters:
    - name: id
      in: path
      required: true
      description: ID of the transaction to update
      schema:
        type: string
        format: cuid
        example: "clh1234567890abcdef"
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../../components/schemas/transaction.yaml"
  responses:
    "200":
      description: Transaction updated successfully
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/transaction.yaml"
          example:
            id: "clh1234567890abcdef"
            market_id: "clh1234567890abcdef"
            date: "2024-01-15T10:30:00Z"
            level_of_traceability: "identite preservee"
            driver_name: "John Smith"
            quantity: 500
            net_weight_declared_in_Ton: 0.5
            humidity_level_of_product: 7.5
            total_quantity_in_bags: 10
            receiver_name: "Jane Doe"
            min_com_verif_agent_name_and_sig: "Agent Smith - Verified"
            sender_signature: "Sender123"
            driver_signature: "Driver456"
            product_quality: "Grade A"
            vehicule_immatriculation_number: "ABC123XY"
            created_at: "2024-01-15T10:30:00Z"
            updated_at: "2024-01-15T11:30:00Z"
    "400":
      $ref: "../../components/responses/ValidationError.yaml"
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "404":
      description: Transaction not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Transaction Not Found"
              message:
                type: string
                example: "Transaction with the specified ID was not found"
              code:
                type: string
                example: "TRANSACTION_NOT_FOUND"
    "409":
      description: Update conflict
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Update Conflict"
              message:
                type: string
                example: "Cannot update transaction in current state"
              code:
                type: string
                example: "UPDATE_CONFLICT"
    "500":
      $ref: "../../components/responses/ServerError.yaml"

# delete a transaction
delete:
  tags:
    - ðŸ’° Transactions
  summary: Delete a transaction
  description: |
    Delete a transaction from the system.

    **Required Permissions:** `write:transactions`

    **Business Rules:**
    - Cannot delete completed transactions
    - Cannot delete transactions older than 30 days
    - Only transaction owner or admin can delete transaction
    - Soft delete - marks transaction as deleted but preserves data
  operationId: deleteTransaction
  security:
    - BearerAuth: []
  responses:
    "204":
      description: Transaction deleted successfully
    "400":
      description: Cannot delete transaction
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Cannot Delete Transaction"
              message:
                type: string
                example: "Cannot delete completed transaction"
              code:
                type: string
                example: "TRANSACTION_ALREADY_COMPLETED"
    "401":
      $ref: ../../components/responses/UnauthorizedError.yaml
    "403":
      $ref: ../../components/responses/ForbiddenError.yaml
    "404":
      description: Transaction not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Transaction Not Found"
              message:
                type: string
                example: "Transaction with the specified ID was not found"
              code:
                type: string
                example: "TRANSACTION_NOT_FOUND"
    "500":
      $ref: ../../components/responses/ServerError.yaml
