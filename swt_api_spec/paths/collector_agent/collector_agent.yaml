get:
  tags:
    - ðŸ‘¥ Users
  summary: List all collector agents
  description: |
    Retrieve a list of all collector agents.
    This endpoint supports pagination and filtering.
  operationId: listCollectorAgents
  parameters:
    - name: page
      in: query
      description: Page number for pagination
      schema:
        type: integer
        minimum: 1
        default: 1
    - name: limit
      in: query
      description: Number of items per page
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    - name: status
      in: query
      description: Filter by agent status
      schema:
        type: string
        enum: [active, inactive, suspended]
    - name: region
      in: query
      description: Filter by region
      schema:
        type: string
  responses:
    "200":
      description: List of collector agents retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "../../components/schemas/collector_agent.yaml"
              meta:
                type: object
                properties:
                  total:
                    type: integer
                    example: 100
                  pages:
                    type: integer
                    example: 5
                  current_page:
                    type: integer
                    example: 1
                  per_page:
                    type: integer
                    example: 20
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "500":
      $ref: "../../components/responses/ServerError.yaml"

post:
  tags:
    - ðŸ‘¥ Users
  summary: Create a new collector agent
  description: Create a new collector agent in the system
  operationId: createCollectorAgent
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../../components/schemas/collector_agent.yaml"
        examples:
          basic_agent:
            summary: Basic collector agent
            description: Create collector agent with minimal information
            value:
              name: "John Doe"
              email: "john.doe@cocoaflow.com"
              phone: "+2348012345678"
              company_id: "clh1234567890abcdef"
              status: "active"
          detailed_agent:
            summary: Detailed collector agent
            description: Create collector agent with all available information
            value:
              name: "John Doe"
              email: "john.doe@cocoaflow.com"
              phone: "+2348012345678"
              company_id: "clh1234567890abcdef"
              status: "active"
              region: "Southwest Nigeria"
              assigned_farms: 25
              experience_years: 3
              specializations: ["Quality Assessment", "Data Collection"]
  responses:
    "201":
      description: Collector agent created successfully
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/collector_agent.yaml"
    "400":
      $ref: "../../components/responses/ValidationError.yaml"
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "409":
      description: Collector agent already exists
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Conflict"
              message:
                type: string
                example: "Collector agent already exists"
              code:
                type: string
                example: "AGENT_EXISTS"
    "500":
      $ref: "../../components/responses/ServerError.yaml"

put:
  tags:
    - ðŸ‘¥ Users
  summary: Update collector agent
  description: Update an existing collector agent
  operationId: updateCollectorAgent
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../../components/schemas/collector_agent.yaml"
  responses:
    "200":
      description: Collector agent updated successfully
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/collector_agent.yaml"
    "400":
      $ref: "../../components/responses/ValidationError.yaml"
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "404":
      description: Collector agent not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Not Found"
              message:
                type: string
                example: "Collector agent not found"
              code:
                type: string
                example: "AGENT_NOT_FOUND"
    "500":
      $ref: "../../components/responses/ServerError.yaml"
