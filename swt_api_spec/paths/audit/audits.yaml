# Unified audit management endpoint
# Supports both project and market audits with query parameters

get:
  tags:
    - ðŸŒ¿ Audits
  summary: List all audits
  description: |
    Retrieve a list of all audits.
    This endpoint supports pagination and filtering.
  operationId: listAudits
  security:
    - BearerAuth: []
  parameters:
    - $ref: "../../components/parameters/PaginationLimit.yaml"
    - $ref: "../../components/parameters/PaginationOffset.yaml"
    - $ref: "../../components/parameters/CompanyId.yaml"
    - $ref: "../../components/parameters/DateRangeStart.yaml"
    - $ref: "../../components/parameters/DateRangeEnd.yaml"
  responses:
    "200":
      description: List of audits retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "../../components/schemas/audit.yaml"
              meta:
                type: object
                properties:
                  total:
                    type: integer
                    example: 100
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 20
                  has_more:
                    type: boolean
                    example: true
    "400":
      $ref: "../../components/responses/ValidationError.yaml"
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "429":
      $ref: "../../components/responses/RateLimitError.yaml"
    "500":
      $ref: "../../components/responses/ServerError.yaml"

post:
  tags:
    - ðŸŒ¿ Audits
  summary: Create a new audit
  description: Create a new audit record
  operationId: createAudit
  security:
    - BearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../../components/schemas/audit.yaml"
        examples:
          project_audit:
            value:
              audit_type: project
              project_id: "clh1234567890abcdef"
              auditor_id: "clh1234567890abcdef"
              audit_date: "2024-01-15"
              scores:
                progress: 75
                quality: 85
                budget: 90
                timeline: 80
              notes: "Project progressing well within timeline"
              risks_identified: ["Weather delays", "Supply chain issues"]
              recommendations: ["Accelerate procurement", "Increase monitoring"]
              metadata:
                company_id: "clh1234567890abcdef"
                location: "Ibadan Division"
                duration_minutes: 120
          market_audit:
            value:
              audit_type: market
              market_id: "clh1234567890abcdef"
              auditor_id: "clh1234567890abcdef"
              audit_date: "2024-01-15"
              scores:
                compliance: 85
                quality: 88
                safety: 90
                efficiency: 82
              notes: "Market operations meeting standards"
              risks_identified: ["Storage conditions", "Documentation gaps"]
              recommendations:
                ["Upgrade storage facilities", "Implement digital records"]
              metadata:
                company_id: "clh1234567890abcdef"
                location: "Central Market"
                duration_minutes: 90
  responses:
    "201":
      description: Audit created successfully
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/audit.yaml"
    "400":
      $ref: "../../components/responses/ValidationError.yaml"
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "409":
      description: Audit already exists
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Audit Already Exists"
              message:
                type: string
                example: "An audit with these parameters already exists"
              code:
                type: string
                example: "AUDIT_ALREADY_EXISTS"
    "500":
      $ref: "../../components/responses/ServerError.yaml"
