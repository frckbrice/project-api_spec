# create a training data
post:
  tags:
    - ðŸŽ“ Training
  summary: Create a training
  description: Create a new training program
  operationId: createTraining
  security:
    - BearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../../components/schemas/training.yaml"
        examples:
          basic_training:
            summary: Basic training program
            description: Create a training with minimal information
            value:
              title: "Cocoa Farming Best Practices"
              location: "Training Center A"
              start_date: "2024-02-01T00:00:00Z"
              end_date: "2024-02-03T00:00:00Z"
              company_id: "clh1234567890abcdef"
              modules: ["Introduction", "Basic Techniques"]
          detailed_training:
            summary: Detailed training program
            description: Create a training with all available information
            value:
              title: "Advanced Cocoa Processing Techniques"
              location: "Training Center A"
              start_date: "2024-02-01T00:00:00Z"
              end_date: "2024-02-05T00:00:00Z"
              company_id: "clh1234567890abcdef"
              modules:
                ["Introduction", "Advanced Processing", "Quality Control"]
              training_sessions: ["clh1234567890abcdeg"]
  responses:
    "201":
      description: Training created successfully
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/training.yaml"
          example:
            id: "clh1234567890abcdef"
            title: "Cocoa Farming Best Practices"
            location: "Training Center A"
            start_date: "2024-02-01T00:00:00Z"
            end_date: "2024-02-03T00:00:00Z"
            company_id: "clh1234567890abcdef"
            modules: ["Introduction", "Basic Techniques"]
            training_sessions: []
            created_at: "2024-01-15T10:30:00Z"
            updated_at: "2024-01-15T10:30:00Z"
    "400":
      $ref: "../../components/responses/ValidationError.yaml"
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "409":
      description: Training already exists
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Training Already Exists"
              message:
                type: string
                example: "Training with the same title already exists"
              code:
                type: string
                example: "TRAINING_ALREADY_EXISTS"
    "500":
      $ref: "../../components/responses/ServerError.yaml"

# get all training data
get:
  tags:
    - ðŸŽ“ Training
  summary: Get all trainings
  description: Retrieve all trainings with optional filtering
  operationId: listTrainings
  security:
    - BearerAuth: []
  parameters:
    - $ref: "../../components/parameters/PaginationLimit.yaml"
    - $ref: "../../components/parameters/PaginationOffset.yaml"
    - $ref: "../../components/parameters/CompanyId.yaml"
    - $ref: "../../components/parameters/DateRangeStart.yaml"
    - $ref: "../../components/parameters/DateRangeEnd.yaml"
  responses:
    "200":
      description: List of trainings retrieved successfully
      headers:
        X-Total-Count:
          description: Total number of trainings matching the filter criteria
          schema:
            type: integer
        X-Page-Count:
          description: Total number of pages
          schema:
            type: integer
        Link:
          description: Pagination links (first, prev, next, last)
          schema:
            type: string
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "../../components/schemas/training.yaml"
              pagination:
                type: object
                properties:
                  total:
                    type: integer
                    example: 150
                  limit:
                    type: integer
                    example: 20
                  offset:
                    type: integer
                    example: 0
                  has_more:
                    type: boolean
                    example: true
          example:
            data:
              - id: "clh1234567890abcdef"
                title: "Cocoa Farming Best Practices"
                location: "Training Center A"
                start_date: "2024-02-01T00:00:00Z"
                end_date: "2024-02-03T00:00:00Z"
                company_id: "clh1234567890abcdef"
                modules: ["Introduction", "Basic Techniques"]
                training_sessions: []
                created_at: "2024-01-15T10:30:00Z"
                updated_at: "2024-01-15T10:30:00Z"
              - id: "clh1234567890abcdeg"
                title: "Advanced Cocoa Processing"
                location: "Training Center B"
                start_date: "2024-02-05T00:00:00Z"
                end_date: "2024-02-07T00:00:00Z"
                company_id: "clh1234567890abcdei"
                modules: ["Advanced Processing", "Quality Control"]
                training_sessions: ["clh1234567890abcdeh"]
                created_at: "2024-01-14T09:15:00Z"
                updated_at: "2024-01-14T09:15:00Z"
            pagination:
              total: 150
              limit: 20
              offset: 0
              has_more: true
    "400":
      $ref: "../../components/responses/ValidationError.yaml"
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "429":
      $ref: "../../components/responses/RateLimitError.yaml"
    "500":
      $ref: "../../components/responses/ServerError.yaml"

# update training
put:
  tags:
    - ðŸŽ“ Training
  summary: Update a training
  description: Update an existing training program
  operationId: updateTraining
  security:
    - BearerAuth: []
  parameters:
    - name: training_id
      in: path
      required: true
      description: ID of the training to update
      schema:
        type: string
        format: cuid
        example: "clh1234567890abcdef"
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../../components/schemas/training.yaml"
  responses:
    "200":
      description: Training updated successfully
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/training.yaml"
          example:
            id: "clh1234567890abcdef"
            title: "Updated Cocoa Farming Best Practices"
            location: "Updated Training Center A"
            start_date: "2024-02-02T00:00:00Z"
            end_date: "2024-02-04T00:00:00Z"
            company_id: "clh1234567890abcdef"
            modules: ["Introduction", "Advanced Techniques"]
            training_sessions: ["clh1234567890abcdeh"]
            created_at: "2024-01-15T10:30:00Z"
            updated_at: "2024-01-15T11:30:00Z"
    "400":
      $ref: "../../components/responses/ValidationError.yaml"
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "404":
      description: Training not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Training Not Found"
              message:
                type: string
                example: "Training with the specified ID was not found"
              code:
                type: string
                example: "TRAINING_NOT_FOUND"
    "409":
      description: Update conflict
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Update Conflict"
              message:
                type: string
                example: "Cannot update training in current state"
              code:
                type: string
                example: "UPDATE_CONFLICT"
    "500":
      $ref: "../../components/responses/ServerError.yaml"

# delete training
delete:
  tags:
    - ðŸŽ“ Training
  summary: Delete training
  description: |
    Delete a training program from the system.

    **Required Permissions:** `write:training`

    **Business Rules:**
    - Cannot delete training that has already started
    - Cannot delete training with enrolled participants
    - Only administrators can delete training programs
    - Soft delete - marks as deleted but preserves data for audit
  operationId: deleteTraining
  security:
    - BearerAuth: []
  responses:
    "204":
      description: Training deleted successfully
    "400":
      description: Cannot delete training
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Cannot Delete Training"
              message:
                type: string
                example: "Cannot delete training that has already started or has enrolled participants"
              code:
                type: string
                example: "TRAINING_HAS_ENROLLMENTS"
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "404":
      description: Training not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Training Not Found"
              message:
                type: string
                example: "Training with the specified ID was not found"
              code:
                type: string
                example: "TRAINING_NOT_FOUND"
    "500":
      $ref: "../../components/responses/ServerError.yaml"
