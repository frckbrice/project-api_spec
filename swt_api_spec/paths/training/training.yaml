# create a training data
post:
  tags:
    - ðŸŽ“ Training
  summary: Create training
  description: |
    Create a new training program for farmers and staff.
    
    **Required Permissions:** `write:training`
    
    **Business Rules:**
    - Only administrators can create training programs
    - Training must have valid start and end dates
    - Maximum capacity must be positive
    - Training location must be specified
  operationId: createTraining
  security:
    - BearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../../components/schemas/training.yaml"
        examples:
          basic_training:
            summary: Basic training program
            description: Create a training program with minimal information
            value:
              title: "Cocoa Farming Best Practices"
              description: "Learn modern cocoa farming techniques"
              start_date: "2024-02-01"
              end_date: "2024-02-03"
              location: "Training Center A"
              max_capacity: 50
          detailed_training:
            summary: Detailed training program
            description: Create a comprehensive training program
            value:
              title: "Advanced Cocoa Processing Techniques"
              description: "Comprehensive training on cocoa processing and quality control"
              start_date: "2024-02-01"
              end_date: "2024-02-05"
              location: "Training Center A"
              max_capacity: 30
              instructor: "Dr. John Smith"
              materials_required: ["Notebook", "Safety gear"]
              certification_provided: true
              cost: 150.00
  responses:
    "201":
      description: Training created successfully
      headers:
        Location:
          description: URL of the created training resource
          schema:
            type: string
            format: uri
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/training.yaml"
          example:
            id: "clh1234567890abcdef"
            title: "Cocoa Farming Best Practices"
            description: "Learn modern cocoa farming techniques"
            start_date: "2024-02-01"
            end_date: "2024-02-03"
            location: "Training Center A"
            max_capacity: 50
            current_enrollment: 0
            status: "upcoming"
            created_at: "2024-01-15T10:30:00Z"
            updated_at: "2024-01-15T10:30:00Z"
    "400":
      $ref: "../../components/responses/ValidationError.yaml"
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "409":
      description: Training already exists
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Training Already Exists"
              message:
                type: string
                example: "Training with this title and date range already exists"
              code:
                type: string
                example: "TRAINING_ALREADY_EXISTS"
    "500":
      $ref: "../../components/responses/ServerError.yaml"

# get all training data
get:
  tags:
    - ðŸŽ“ Training
  summary: List all trainings
  description: |
    Retrieve a paginated list of training programs with optional filtering capabilities.
    
    **Required Permissions:** `read:training`
    
    **Filtering Options:**
    - Filter by company ID
    - Filter by training status
    - Filter by date range
    - Filter by location
    - Filter by instructor
    
    **Pagination:**
    - Default limit: 20 items per page
    - Maximum limit: 100 items per page
  operationId: getAllTraining
  security:
    - BearerAuth: []
  parameters:
    - $ref: "../../components/parameters/PaginationLimit.yaml"
    - $ref: "../../components/parameters/PaginationOffset.yaml"
    - $ref: "../../components/parameters/CompanyId.yaml"
    - $ref: "../../components/parameters/DateRangeStart.yaml"
    - $ref: "../../components/parameters/DateRangeEnd.yaml"
    - name: status
      in: query
      description: Filter by training status
      required: false
      schema:
        type: string
        enum: [upcoming, ongoing, completed, cancelled]
        example: "upcoming"
    - name: location
      in: query
      description: Filter by training location (partial match)
      required: false
      schema:
        type: string
        example: "Training Center"
    - name: instructor
      in: query
      description: Filter by instructor name (partial match)
      required: false
      schema:
        type: string
        example: "Dr. Smith"
    - name: min_capacity
      in: query
      description: Minimum capacity filter
      required: false
      schema:
        type: integer
        minimum: 0
        example: 20
    - name: max_capacity
      in: query
      description: Maximum capacity filter
      required: false
      schema:
        type: integer
        minimum: 0
        example: 100
  responses:
    "200":
      description: Trainings retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "../../components/schemas/training.yaml"
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    example: 20
                  offset:
                    type: integer
                    example: 0
                  total:
                    type: integer
                    example: 25
                  page_count:
                    type: integer
                    example: 2
                  has_next:
                    type: boolean
                    example: true
                  has_prev:
                    type: boolean
                    example: false
              summary:
                type: object
                properties:
                  total_trainings:
                    type: integer
                    example: 25
                  upcoming_trainings:
                    type: integer
                    example: 10
                  ongoing_trainings:
                    type: integer
                    example: 5
                  completed_trainings:
                    type: integer
                    example: 10
          example:
            data:
              - id: "clh1234567890abcdef"
                title: "Cocoa Farming Best Practices"
                description: "Learn modern cocoa farming techniques"
                start_date: "2024-02-01"
                end_date: "2024-02-03"
                location: "Training Center A"
                max_capacity: 50
                current_enrollment: 25
                status: "upcoming"
                created_at: "2024-01-15T10:30:00Z"
                updated_at: "2024-01-15T10:30:00Z"
              - id: "clh1234567890abcdeg"
                title: "Advanced Cocoa Processing"
                description: "Advanced techniques for cocoa processing"
                start_date: "2024-02-05"
                end_date: "2024-02-07"
                location: "Training Center B"
                max_capacity: 30
                current_enrollment: 15
                status: "upcoming"
                created_at: "2024-01-14T09:15:00Z"
                updated_at: "2024-01-14T09:15:00Z"
            pagination:
              limit: 20
              offset: 0
              total: 25
              page_count: 2
              has_next: true
              has_prev: false
            summary:
              total_trainings: 25
              upcoming_trainings: 10
              ongoing_trainings: 5
              completed_trainings: 10
    "400":
      $ref: "../../components/responses/ValidationError.yaml"
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "500":
      $ref: "../../components/responses/ServerError.yaml"

# update training
put:
  tags:
    - ðŸŽ“ Training
  summary: Update training
  description: |
    Update an existing training program.
    
    **Required Permissions:** `write:training`
    
    **Business Rules:**
    - Cannot update training that has already started
    - Cannot reduce capacity below current enrollment
    - Only administrators can update training programs
    - All changes are logged for audit purposes
  operationId: updateTraining
  security:
    - BearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            title:
              type: string
              description: Updated training title
              example: "Updated Cocoa Farming Best Practices"
            description:
              type: string
              description: Updated training description
              example: "Updated description with new techniques"
            start_date:
              type: string
              format: date
              description: Updated start date
              example: "2024-02-02"
            end_date:
              type: string
              format: date
              description: Updated end date
              example: "2024-02-04"
            location:
              type: string
              description: Updated training location
              example: "Updated Training Center A"
            max_capacity:
              type: integer
              minimum: 1
              description: Updated maximum capacity
              example: 60
            instructor:
              type: string
              description: Updated instructor name
              example: "Dr. Jane Doe"
            cost:
              type: number
              minimum: 0
              description: Updated training cost
              example: 175.00
        examples:
          update_basic:
            summary: Update basic training details
            description: Update title, description, and location
            value:
              title: "Updated Cocoa Farming Best Practices"
              description: "Updated description with new techniques"
              location: "Updated Training Center A"
          update_schedule:
            summary: Update training schedule
            description: Update dates and capacity
            value:
              start_date: "2024-02-02"
              end_date: "2024-02-04"
              max_capacity: 60
  responses:
    "200":
      description: Training updated successfully
      content:
        application/json:
          schema:
            $ref: "../../components/schemas/training.yaml"
          example:
            id: "clh1234567890abcdef"
            title: "Updated Cocoa Farming Best Practices"
            description: "Updated description with new techniques"
            start_date: "2024-02-02"
            end_date: "2024-02-04"
            location: "Updated Training Center A"
            max_capacity: 60
            current_enrollment: 25
            status: "upcoming"
            instructor: "Dr. Jane Doe"
            cost: 175.00
            created_at: "2024-01-15T10:30:00Z"
            updated_at: "2024-01-15T11:30:00Z"
    "400":
      $ref: "../../components/responses/ValidationError.yaml"
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "404":
      description: Training not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Training Not Found"
              message:
                type: string
                example: "Training with the specified ID was not found"
              code:
                type: string
                example: "TRAINING_NOT_FOUND"
    "409":
      description: Training update conflict
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Training Update Conflict"
              message:
                type: string
                example: "Cannot update training that has already started"
              code:
                type: string
                example: "TRAINING_ALREADY_STARTED"
    "500":
      $ref: "../../components/responses/ServerError.yaml"

# delete training
delete:
  tags:
    - ðŸŽ“ Training
  summary: Delete training
  description: |
    Delete a training program from the system.
    
    **Required Permissions:** `write:training`
    
    **Business Rules:**
    - Cannot delete training that has already started
    - Cannot delete training with enrolled participants
    - Only administrators can delete training programs
    - Soft delete - marks as deleted but preserves data for audit
  operationId: deleteTraining
  security:
    - BearerAuth: []
  responses:
    "204":
      description: Training deleted successfully
    "400":
      description: Cannot delete training
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Cannot Delete Training"
              message:
                type: string
                example: "Cannot delete training that has already started or has enrolled participants"
              code:
                type: string
                example: "TRAINING_HAS_ENROLLMENTS"
    "401":
      $ref: "../../components/responses/UnauthorizedError.yaml"
    "403":
      $ref: "../../components/responses/ForbiddenError.yaml"
    "404":
      description: Training not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Training Not Found"
              message:
                type: string
                example: "Training with the specified ID was not found"
              code:
                type: string
                example: "TRAINING_NOT_FOUND"
    "500":
      $ref: "../../components/responses/ServerError.yaml"
