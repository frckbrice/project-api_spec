post:
  tags:
    - üîê Authentication
  summary: Login user
  description: Authenticate a user and get access tokens
  operationId: loginUser
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - email
            - password
          properties:
            email:
              type: string
              format: email
              description: User's email address
              example: "user@example.com"
            password:
              type: string
              format: password
              description: User's password (min 8 characters)
              minLength: 8
              example: "securePassword123"
            remember_me:
              type: boolean
              description: Whether to extend token expiration
              default: false
              example: true
        examples:
          basic_login:
            summary: Basic login
            description: Standard login with email and password
            value:
              email: "user@example.com"
              password: "securePassword123"
          extended_session:
            summary: Extended session
            description: Login with extended token expiration
            value:
              email: "user@example.com"
              password: "securePassword123"
              remember_me: true
  responses:
    "200":
      description: Login successful
      headers:
        Set-Cookie:
          description: Refresh token cookie (HttpOnly, Secure)
          schema:
            type: string
            example: "refresh_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; HttpOnly; Secure; SameSite=Strict"
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: "Login successful"
              data:
                type: object
                properties:
                  user:
                    $ref: "../../components/schemas/user.yaml"
                  tokens:
                    type: object
                    properties:
                      access_token:
                        type: string
                        description: JWT access token
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                      refresh_token:
                        type: string
                        description: JWT refresh token
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                      expires_in:
                        type: integer
                        description: Token expiration time in seconds
                        example: 86400
                      token_type:
                        type: string
                        example: "Bearer"
          example:
            success: true
            message: "Login successful"
            data:
              user:
                id: "clh1234567890abcdef"
                email: "user@example.com"
                first_name: "John"
                last_name: "Doe"
                role: "user"
                company_id: "clh1234567890abcdef"
                is_active: true
                created_at: "2024-01-15T10:30:00Z"
                updated_at: "2024-01-15T10:30:00Z"
              tokens:
                access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                refresh_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                expires_in: 86400
                token_type: "Bearer"
    "400":
      $ref: "../../components/responses/ValidationError.yaml"
    "401":
      description: Invalid credentials
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: "Invalid Credentials"
              message:
                type: string
                example: "Email or password is incorrect"
              code:
                type: string
                example: "INVALID_CREDENTIALS"
    "429":
      $ref: "../../components/responses/RateLimitError.yaml"
    "500":
      $ref: "../../components/responses/ServerError.yaml"
